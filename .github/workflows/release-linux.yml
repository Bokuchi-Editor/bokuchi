name: Build Linux Release

on:
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libasound2-dev \
            libx11-dev \
            libxcomposite-dev \
            libxdamage-dev \
            libxext-dev \
            libxfixes-dev \
            libxrandr-dev \
            libxss-dev \
            libxtst-dev \
            libdrm-dev \
            libxkbcommon-dev \
            libgdk-pixbuf2.0-dev \
            libpango1.0-dev \
            libcairo2-dev \
            libglib2.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libgstreamer-plugins-bad1.0-dev \
            libgstreamer-gl1.0-0 \
            libgstreamer-plugins-base1.0-0 \
            libgstreamer-plugins-bad1.0-0 \
            libgstreamer-plugins-good1.0-0 \
            libsoup2.4-dev \
            libsoup-3.0-dev \
            libatk-bridge2.0-dev \
            libepoxy-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Build application
        run: npm run tauri:build -- --target x86_64-unknown-linux-gnu

      - name: Get version from package.json
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Upload DEB package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/deb/Bokuchi_${{ steps.version.outputs.version }}_amd64.deb
          asset_name: Bokuchi_${{ steps.version.outputs.version }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload RPM package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/rpm/Bokuchi-${{ steps.version.outputs.version }}-1.x86_64.rpm
          asset_name: Bokuchi-${{ steps.version.outputs.version }}-1.x86_64.rpm
          asset_content_type: application/x-rpm

      - name: Upload AppImage to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/Bokuchi_${{ steps.version.outputs.version }}_amd64.AppImage
          asset_name: Bokuchi_${{ steps.version.outputs.version }}_amd64.AppImage
          asset_content_type: application/octet-stream
